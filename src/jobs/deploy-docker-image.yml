description: >
  Updates the service in one cluster to the new built docker image.
  By using the previous valid task-definition in AWS and changing the ecr image url according to the CIRCLE_SHA1 on the env.

executor: aws-cli/default

parameters:
  cluster-name:
    type: string
    default: ${ECS_CLUSTER_NAME}
  node-env:
    type: string
    default: ${NODE_ENV}
  resource-name:
    type: string
    default: ${APP_NAME}
    description: >
      Defines the next resources: service-name in the cluster, container-name, ecr repo-name and the task-definition name prefix. task-defintion usually named: `{resource-name}-{staging/production}`

steps:
  - aws-cli/install
  - aws-cli/setup
  - aws-ecs/update-service:
      cluster-name: << parameters.cluster-name >>
      family: '<< parameters.resource-name >>-<< parameters.node-env >>'
      service-name: << parameters.resource-name >>
      container-image-name-updates: >
        'container=$<< parameters.resource-name >>,image-and-tag=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/<< parameters.resource-name >>:${CIRCLE_SHA1}'
      container-env-var-updates: >
        container=<< parameters.resource-name >>,name=NODE_ENV,value=<< parameters.node-env >>
      verify-revision-is-deployed: true
  - slack/notify:
      event: pass
      template: success_tagged_deploy_1
  - slack/notify:
      event: fail
      template: base_fail_1
